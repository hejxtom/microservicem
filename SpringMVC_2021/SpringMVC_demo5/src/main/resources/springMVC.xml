<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <context:component-scan base-package="com.atguigu.mvc"></context:component-scan>


    <!-- 配置Thymeleaf视图解析器 -->
    <bean id="viewResolver" class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
        <property name="order" value="1"/>
        <property name="characterEncoding" value="UTF-8"/>
        <property name="templateEngine">
            <bean class="org.thymeleaf.spring5.SpringTemplateEngine">
                <property name="templateResolver">
                    <bean class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">

                        <!-- 视图前缀 -->
                        <property name="prefix" value="/WEB-INF/templates/"/>

                        <!-- 视图后缀 -->
                        <property name="suffix" value=".html"/>
                        <property name="templateMode" value="HTML5"/>
                        <property name="characterEncoding" value="UTF-8" />
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <!--
    处理静态资源，例如html、js、css、jpg
   若只设置该标签，则只能访问静态资源，其他请求则无法访问
   此时必须设置<mvc:annotation-driven/>解决问题
  -->
    <mvc:default-servlet-handler/>

    <!-- 开启mvc注解驱动 -->
    <mvc:annotation-driven>
        <mvc:message-converters>
            <!-- 处理响应中文内容乱码 -->
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="defaultCharset" value="UTF-8" />
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/html</value>
                        <value>application/json</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!--当我们的返回的视图名称没有任何前缀的话，可以使用
     path：设置处理的请求地址
     view-name：设置请求地址所对应的视图名称
    -->
    <mvc:view-controller path="/" view-name="index"/>

    <!--开启SpringMVC的注解驱动
      防止因为view-controller的配置使得Controller失效
    -->
    <mvc:annotation-driven/>

    <!--  配置拦截器  -->
    <mvc:interceptors>
        <!--   拦截对DispatcherServlet处理的所有请求    -->
        <!-- <bean class="com.atguigu.mvc.interceptor.FristInterceptor"></bean>-->
        <!--<ref bean="fristInterceptor"></ref>-->
        <!--   指定拦截规则     -->
        <!--
             /*:只能拦截一层目录
             /**:多层目录
        -->
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/"/>
            <bean class="com.atguigu.mvc.interceptor.FristInterceptor"></bean>
        </mvc:interceptor>
    </mvc:interceptors>

<!--有配置类，则注销以下-->
<!-- 配置异常处理   -->
<!--    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">-->
<!--        <property name="exceptionMappings">-->
<!--            <props>-->
<!--                <prop key="java.lang.ArithmeticException">error</prop>-->
<!--            </props>-->
<!--        </property>-->
<!--    当出现异常时，将异常信息存储在请求域中的键为ex    -->
<!--        <property name="exceptionAttribute" value="ex"></property>-->
<!--    </bean>-->
</beans>